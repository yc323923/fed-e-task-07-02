1: 10

2: 报错 let 声明一个变量不可提前调用

3：math.min(...arr);

4: var 声明的变量会有提升默认undefined

   let const 声明的变量在{}中会形成块级作用域 且 不可在声明之前调用

   const声明的变量不可修改

5：20

6：symbol 唯一 可以作为对象的属性

7： 浅复制只复制一层对象的属性，而深复制则递归复制了所有层级。深拷贝复制的是值而不是引用地址

8：TypeScript 是 JavaScript 的一个超集。

9：使用TS的好处：

（1）增强代码的可读性和可维护性，强类型的系统相当于最好的文档，在编译时即可发现大部分的错误，增强编辑器的功能。

（2）包容性，js文件可以直接改成 ts 文件，不定义类型可自动推论类型，可以定义几乎一切类型，ts 编译报错时也可以生成 js 文件，兼容第三方库，即使不是用ts编写的

（3）有活跃的社区，大多数的第三方库都可提供给 ts 的类型定义文件，完全支持 es6 规范

使用 TS 的缺点：

（1）增加学习成本，需要理解接口（Interfaces）和泛型（Generics），类（class），枚举类型（Enums）

（2）短期增加开发成本，增加类型定义，但减少维护成本

（3）ts 集成到构建流程需要一定的工作量

（4）和有些库结合时不是很完美

 

10：用一个引用值来表示该值被引用了没有 如果为0 则立即被回收

    可以即时回收垃圾对象

    减少程序卡顿时间

    无法回收循环引用的对象

    资源消耗较大

11：找到可达对象对它进行活动标记 对其进行位置移动 回收垃圾

 

12 新生代对象 内存一分为2 一个 from 一个 to 活动对象存储于from。标记整理后将活动对象拷贝至to 空间 然后from与to完成交换从而释放内存

 

13： 遍历对象进行标记 然后将任务拆分开 分别完成
